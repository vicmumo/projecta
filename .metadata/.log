!SESSION 2020-04-06 09:33:28.611 -----------------------------------------------
eclipse.buildId=4.14.0.I20191210-0610
java.version=1.8.0_242
java.vendor=Private Build
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os linux -ws gtk -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY com.wakatime.eclipse.plugin 1 0 2020-04-06 09:33:51.989
!MESSAGE wakatime-cli is up to date.

!ENTRY org.eclipse.ui 4 4 2020-04-06 09:34:35.661
!MESSAGE Referenced part does not exist yet: fast.

!ENTRY org.apache.ivyde.eclipse 1 0 2020-04-06 09:34:58.211
!MESSAGE starting IvyDE plugin

!ENTRY org.apache.ivyde.eclipse 1 0 2020-04-06 09:34:58.232
!MESSAGE IvyDE plugin started

!ENTRY org.eclipse.jface 2 0 2020-04-06 11:21:15.111
!MESSAGE Ignored reentrant call while viewer is busy. This is only logged once per viewer instance, but similar calls will still be ignored.
!STACK 0
java.lang.RuntimeException
	at org.eclipse.jface.viewers.ColumnViewer.checkBusy(ColumnViewer.java:764)
	at org.eclipse.jface.viewers.ColumnViewer.update(ColumnViewer.java:543)
	at org.eclipse.ui.navigator.CommonViewer.update(CommonViewer.java:512)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1970)
	at org.eclipse.ui.internal.navigator.resources.nested.NestedProjectsLabelProvider.lambda$2(NestedProjectsLabelProvider.java:87)
	at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:670)
	at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:646)
	at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1609)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1596)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
